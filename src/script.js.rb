require 'opal'
require 'native'
require 'promise'
require 'browser/setup/full'

Position = Struct.new(:x, :y)
mouse = Struct.new(:x, :y, :drag).new(0, 0, false)

$document.ready do
  draggable = $document.css('.draggable')
  windows = $document.css('.window')

  puts draggable.to_ary

  draggable_cached_position = []
  draggable.each do |element|
    draggable_cached_position.push Position.new(
      element.parent.position.x,
      element.parent.position.y,
    )
  end
  draggable.each_with_index do |element, index|
    element.parent.style.apply {
      top draggable_cached_position[index].y.px
      left draggable_cached_position[index].x.px
      position 'absolute'
      z index: draggable.length - index
    }
  end

  # resort window when one is clicked on
  windows.each do |element|
    element.on :mousedown do |e|
      draggable.unshift draggable.delete(element.at_css('.title-bar'))
      draggable.each_with_index do |elem, index|
        elem.parent.style.apply {
          z index: draggable.length - index
        }
      end
    end
  end

  # set window to "drag" mode when clicked on and reset when let go
  draggable.each do |element|
    element.on :mousedown do |e|
      mouse.drag = element
      mouse.x = e.page.x - element.parent.position.x
      mouse.y = e.page.y - element.parent.position.y
      element.parent.style.apply {
        top (e.page.y.px - mouse.y).px
        left (e.page.x.px - mouse.x).px
        position 'absolute'
      }
      $document.one :mouseup do |e|
        mouse.drag = false
      end
    end
  end

  # when a window is in "drag" mode, move window to mouse cursor
  $document.on :mousemove do |e|
    if mouse.drag
      mouse.drag.parent.style.apply {
        top (e.page.y.px - mouse.y).px
        left (e.page.x.px - mouse.x).px
      }
    end
  end
=begin
  DOM do
    h2.opal do
      "Hello World from Opal!"
    end
    p.opal {"This part was generated by Opal from Javascript (:"}
    h2.articles do
      "Here is some articles that were generated using the processing system:"
    end
    p.articles do 
      a(href: '/articles').articles { "Articles" }
    end
  end.append_to($document.body)
=end
end
